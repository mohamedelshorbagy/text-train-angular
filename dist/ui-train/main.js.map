{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/phrase/phrase.component.css","webpack:///./src/app/components/phrase/phrase.component.ts","webpack:///./src/app/directives/text-selection.directive.ts","webpack:///./src/app/pipes/loop-over-objects.pipe.ts","webpack:///./src/app/services/file-op.service.ts","webpack:///./src/app/services/store.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \":host {\\n    display: block;\\n    font-size: 18px;\\n}\\n\\n*, *::before, *::after {\\n    box-sizing: border-box;\\n}\\n\\n.container {\\n    position: relative;\\n}\\n\\nform {\\n    margin-top: 15px;\\n}\\n\\ninput {\\n    margin-bottom: 15px;\\n}\\n\\n.btn-center {\\n    margin-left: 50%;\\n    -webkit-transform: translateX(-50%);\\n            transform: translateX(-50%);\\n}\\n\\n.field {\\n    margin-bottom: 15px;\\n}\\n\\ninput.ng-touched.ng-invalid {\\n    border: 1px solid rgb(231, 70, 96);\\n}\\n\\n.add__line {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.add__line input {\\n    margin-bottom: 0;\\n    margin-right: 5px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <form (ngSubmit)=\\\"submitPhrases()\\\" #f=\\\"ngForm\\\">\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"tuplesPhrases\\\" name=\\\"tuplesPhrases\\\" class=\\\"form-control\\\" />\\n    <button class=\\\"btn btn-primary btn-center\\\" [disabled]=\\\"!f.valid\\\">Submit</button>\\n  </form>\\n  <hr>\\n  <button class=\\\"btn btn-success btn-center\\\" (click)=\\\"saveFile()\\\">Save Data</button>\\n  <hr>\\n</div>\\n<ng-template [ngIf]=\\\"toggleInputs\\\">\\n  <div class=\\\"add-line container\\\">\\n    <form #addLine=\\\"ngForm\\\" (ngSubmit)=\\\"addNewLine(addLine)\\\" class=\\\"form-group add__line\\\">\\n      <input type=\\\"text\\\" ngModel #line=\\\"ngModel\\\" name=\\\"line\\\" class=\\\"form-control\\\" required />\\n\\n      <button class=\\\"btn btn-default\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">\\n        <i class=\\\"fa fa-plus\\\"></i>\\n      </button>\\n    </form>\\n  </div>\\n  <hr>\\n  <div *ngFor=\\\"let line of lines; let i = index\\\">\\n    <app-phrase [line]=\\\"line\\\" [entities]=\\\"entities\\\" [lineIndex]=\\\"i\\\" (updateLines)=\\\"updateLines($event)\\\">\\n    </app-phrase>\\n\\n  </div>\\n</ng-template>\"","\n// Import the core angular services.\nimport { Component } from \"@angular/core\";\n\n// Import the application components and services.\nimport { TextSelectEvent } from \"./directives/text-selection.directive\";\nimport { StoreService } from \"./services/store.service\";\nimport { FileSaverService } from \"ngx-filesaver\";\n\n@Component({\n  selector: \"app-root\",\n  styleUrls: [\"./app.component.css\"],\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  toggleInputs: boolean = false;\n  tuplesPhrases: any;\n  lines: any[];\n  entities: any;\n\n  constructor(\n    private store: StoreService,\n    private fileSaver: FileSaverService) {\n\n  }\n\n  ngOnInit() {\n    this.entities = this.store.getEntities();\n\n\n    this.store.getIndex().forEach((event) => {\n      this.removeSelection(+event);\n    })\n\n\n  }\n\n\n  addNewLine(f) {\n    let newPhrase = f.value.line;\n    console.log(f);\n\n    let line = [\n      newPhrase,\n      {\n        entities: []\n      }\n    ];\n\n\n    this.lines.unshift(line);\n  }\n\n\n  private removeSelection(index: number) {\n    for (let i = 0; i < this.lines.length; i++) {\n      if (i === index) {\n        this.lines[i]['hostRectangle'] = true;\n      } else {\n        this.lines[i]['hostRectangle'] = false;\n      }\n    }\n  }\n\n\n  // ---\n  // PUBLIC METHODS.\n  // ---\n\n  public updateLines(event: { line: any, index: number | string }) {\n    let { index, line } = event;\n    this.lines[index] = line;\n  }\n\n  public saveFile() {\n    let tuples = this.store.arrays2Tuples(this.lines);\n    let data = new Blob([tuples], { type: \"text/plain;charset=utf-8\" });\n    this.fileSaver.save(data, 'data-angular.txt');\n\n  }\n\n  public submitPhrases() {\n    this.toggleInputs = true;\n    this.lines = this.store.tuple2Arrays(this.tuplesPhrases);\n\n  }\n\n\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TextSelectDirective } from './directives/text-selection.directive';\nimport { ContenteditableModule } from 'ng-contenteditable';\nimport { FormsModule } from '@angular/forms';\nimport { PhraseComponent } from './components/phrase/phrase.component';\n\nimport { StoreService } from './services/store.service'\nimport { FileOpService } from './services/file-op.service';\nimport { LoopOverObjectsPipe } from './pipes/loop-over-objects.pipe';\nimport { FileSaverModule } from 'ngx-filesaver';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TextSelectDirective,\n    PhraseComponent,\n    LoopOverObjectsPipe,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ContenteditableModule,\n    FileSaverModule\n  ],\n  providers: [\n    StoreService,\n    FileOpService,\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".entities {\\n    margin-bottom: 15px;\\n    margin-top: 15px;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.entities .entity {\\n    margin: 5px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 2px 5px;\\n    font-size: 14px;\\n    border-radius: 5px;\\n    cursor: pointer;\\n}\\n\\n.field {\\n    margin-bottom: 15px;\\n}\\n\\n.icon {\\n    padding: 2px 5px;\\n    cursor: pointer;\\n}\\n\\n.icon .fa.fa-trash {\\n    color: rgb(231, 70, 69);\\n    font-size: 26px;\\n}\"","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport {\n  ViewChild, ViewContainerRef, ComponentRef,\n  Compiler, ComponentFactory, NgModule, ModuleWithComponentFactories\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { StoreService } from '../../services/store.service';\nimport { TextSelectEvent } from \"../../directives/text-selection.directive\";\n\n@Component({\n  selector: 'app-phrase',\n  template: `\n    <div class=\"container field\" (textSelect)=\"renderRectangles($event)\" #containSelect>\n    <form #testForm=\"ngForm\">\n      <div type=\"text\" class=\"form-control\" contenteditable=\"true\" (blur)=\"triggerChange($event)\" name=\"phrase\">\n        <ng-template #container></ng-template>\n      </div>\n    </form>\n\n\n    <ng-template [ngIf]=\"line?.hostRectangle\">\n      <div class=\"card bg-light entities\">\n        <div class=\"entity\" *ngFor=\"let key of entities | objectLoop\" [style.background]=\"entities[key]\" (click)=\"changeEntity(key)\">\n          {{ key }}\n        </div>\n        <div class=\"icon\" (click)=\"removeEntity()\">\n          <i class=\"fa fa-trash\"></i>\n        </div>\n      </div>\n    </ng-template>\n\n    </div>\n  `,\n  styleUrls: ['./phrase.component.css']\n})\n\nexport class PhraseComponent implements OnInit, OnDestroy {\n\n  @Input() line: any;\n  @Input() lineIndex: number;\n  @Input() entities: any;\n  @Output() updateLines: EventEmitter<any> = new EventEmitter<any>()\n  entityIndex: number | string = -1;\n  selection: boolean = false;\n  @ViewChild('container', { read: ViewContainerRef })\n  container: ViewContainerRef;\n  @ViewChild('containSelect') containSelect;\n  selectionIndecies: {\n    start: number,\n    end: number\n  } = {\n      start: null,\n      end: null\n    };\n  private componentRef: ComponentRef<{}>;\n\n  constructor(\n    private compiler: Compiler,\n    private store: StoreService\n  ) {\n  }\n\n\n  ngOnInit() {\n    this.getEntitesFromPhrase();\n  }\n\n  triggerChange(event) {\n    let newText = event.target.innerText;\n    this.updateParentLines(newText);\n  }\n\n  removeEntity() {\n    this.line[1]['entities'].splice(+this.entityIndex, 1);\n    this.store.sendIndex(-1);\n    this.updateParentLines();\n  }\n\n  updateParentLines(text?: string) {\n    let textParam = null;\n    if (text && (text !== '')) {\n      textParam = text;\n    }\n    this.getEntitesFromPhrase(textParam);\n    this.updateLines.emit({ line: this.line, index: this.lineIndex });\n  }\n\n\n  selectPhrase(entityIndex: number | string) {\n    this.entityIndex = entityIndex;\n    this.selection = false;\n    this.store.sendIndex(this.lineIndex);\n  }\n\n  public renderRectangles(event: TextSelectEvent): void {\n    this.selection = true;\n    console.group(\"Text Select Event\");\n    console.log(\"Text:\", event.text);\n    console.log(\"Selection State\", event.selectionState);\n    console.groupEnd();\n    this.store.sendIndex(this.lineIndex);\n    if (event.text) {\n      this.line['selectedText'] = event.text;\n      this.selectionIndecies = {\n        ...event.selectionState\n      }\n    }\n    console.log(this.line['selectedText']);\n\n\n    // If a new selection has been created, the viewport and host rectangles will\n    // exist. Or, if a selection is being removed, the rectangles will be null.\n    if (event.hostRectangle) {\n      this.line['hostRectangle'] = true;\n    } else {\n      this.store.sendIndex(this.lineIndex);\n\n    }\n\n  }\n\n\n  changeEntity(entityName) {\n    if (!this.selection) {\n      // Clicked in entity word\n      this.updateExistedEntityWord(entityName);\n\n    } else {\n      /**\n       * Selection\n       * \n       */\n      let entityObj = this.getEntityObject(entityName, this.selectionIndecies.start, this.selectionIndecies.end);\n      let newEntityItem = [\n        entityObj.start,\n        entityObj.end,\n        entityObj.type\n      ];\n      let entities = this.line[1]['entities'];\n\n      /*** Case of empty Phrase  */\n      if (entities && (entities.length === 0)) {\n        this.line[1]['entities'].push(newEntityItem);\n        this.store.sendIndex(-1);\n        this.updateParentLines();\n        return;\n      }\n      let checkIndexIfExisted = this.checkIfExtendExistedEntity(newEntityItem, entities);\n\n      if (checkIndexIfExisted !== -1) {\n        this.line[1]['entities'][checkIndexIfExisted] = newEntityItem;\n        this.store.sendIndex(-1);\n        this.updateParentLines();\n        return;\n      }\n\n      let entitiesLen = this.line[1]['entities'].length;\n      let firstEntityStartPos = this.line[1]['entities'][0][0];\n      let lastEntityEndPos = this.line[1]['entities'][entitiesLen - 1][1];\n\n      /**\n       * \n       * Case Of Start Of Phrase\n       * \n       */\n      if (firstEntityStartPos > newEntityItem[0]) {\n        this.line[1]['entities'].splice(0, 0, newEntityItem);\n        this.store.sendIndex(-1);\n        this.updateParentLines();\n        return;\n\n      }\n      /**\n       * \n       * Case Of end Of Phrase\n       */\n      if (lastEntityEndPos < newEntityItem[1]) {\n        this.line[1]['entities'].splice(entitiesLen + 1, 0, newEntityItem);\n        this.store.sendIndex(-1);\n        this.updateParentLines();\n        return;\n\n      }\n\n      for (let i = 0; i < entities.length - 1; i++) {\n        let fStart = entities[i][0];\n        let sEnd = entities[i + 1][1];\n        let iStart = newEntityItem[0];\n        if (fStart < iStart && sEnd > iStart) {\n          this.line[1]['entities'].splice(i + 1, 0, newEntityItem);\n          this.store.sendIndex(-1);\n          this.updateParentLines();\n          return;\n        }\n      }\n\n\n    }\n  }\n\n\n  checkIfExtendExistedEntity(entity, entities): number {\n\n    let iStart = entity[0];\n\n    for (let i = 0; i < entities.length; i++) {\n      let fStart = entities[i][0];\n      if (fStart === iStart) {\n        return i;\n      }\n    }\n    return -1;\n\n\n  }\n\n  getEntityObject(entityName: string, startIndex: number, endIndex: number) {\n    console.group('Selected Text');\n    console.log('index', startIndex);\n    console.log('endIndex', endIndex);\n    console.groupEnd()\n    return {\n      start: startIndex,\n      end: endIndex,\n      type: entityName\n    }\n\n  }\n\n\n  updateExistedEntityWord(entityName) {\n    let entityIndex = this.entityIndex;\n    let entities = this.line[1]['entities'];\n    if (entities && entities.length) {\n      this.line[1]['entities'][entityIndex][2] = entityName;\n    }\n    this.store.sendIndex(-1);\n    this.updateParentLines();\n\n  }\n\n  addEntityBySelection(entityName) {\n    // arr.splice(7, 0, \"Mohamed\"); // Insert in specific location\n\n\n    /**\n     * \n     * Finite State Machine Of Selection of text\n     *                    -----> Start Of Phrase ===> unshif inside entities array ==> %Done\n     *    @@@ Selection   -----> Middle Of Phrase >>>> insertInMiddelLogic ==> %Done\n     *                    -----> End Of Phrase ===> push inside entities array ==> %Done\n     * \n     *    # insertInMiddelLogic %Done\n     *        ----> get entities array of selected phrase\n     *        ----> for loop over elements and check two elements together\n     *        ----> check (end of first element) with (start of second element)\n     *        ----> get the (start of the new entity) and check them with previous step\n     *        ----> if (el1.end < new.start && el2.start > new.start) ==> should be inserted instead of el2\n     *    \n     * \n     *    Select an exist entity phrase  ----> updateExistedEntityWord ==> %Done\n     *    Select an exist entity phrase from (start ,middle, end)  ----> unknow????\n     *    Select an exist entity phrase with new phrase  >>>> updateEntityLogic() ==> %Done\n     *    Select an exist entity phrase with another entity phrase  ----> Error Like Dialogflow or another behaviour\n     *        \n     *    # updateEntityLogic %Done\n     *        -----> Get entities array of selected phrase \n     *        -----> loop over them & if start of one of them === to the new.start\n     *        -----> Update end of this entity \n     * \n     */\n\n\n  }\n\n\n  ngOnDestroy() {\n    this.componentRef.destroy();\n    this.componentRef = null;\n  }\n\n\n  compileTemplate() {\n    let metadata = {\n      selector: `runtime-component-sample`,\n      template: this.line[4]\n    };\n    let factory = this.createComponentFactorySync(this.compiler, metadata);\n\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.componentRef = null;\n    }\n\n    this.componentRef = this.container.createComponent(factory);\n    let instance = <DynamicComponent>this.componentRef.instance;\n    /**\n     * \n     * Inputs, Outputs of created component\n     */\n    instance.line = this.line;\n    instance.selectPhrase.subscribe(this.selectPhrase.bind(this));\n  }\n\n  private createComponentFactorySync(compiler: Compiler, metadata: Component, componentClass?: any): ComponentFactory<any> {\n    let cmpClass;\n    let decoratedCmp;\n    if (componentClass) {\n      cmpClass = componentClass;\n      decoratedCmp = Component(metadata)(cmpClass);\n    } else {\n      @Component(metadata)\n      class RuntimeComponent {\n        @Input() line: any;\n        @Output() selectPhrase: EventEmitter<any> = new EventEmitter<any>();\n        showEntities(lineIndex, entityIndex) {\n          this.selectPhrase.emit(entityIndex);\n        }\n      };\n      decoratedCmp = RuntimeComponent;\n    }\n\n    @NgModule({ imports: [CommonModule], declarations: [decoratedCmp] })\n    class RuntimeComponentModule { }\n    let module: ModuleWithComponentFactories<any> = compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n    return module.componentFactories.find(f => f.componentType === decoratedCmp);\n  }\n\n\n  getEntitesFromPhrase(text?: string) {\n    let phrase;\n    if (text) {\n      phrase = text;\n      this.line[0] = phrase;\n    } else {\n      phrase = this.line[0];\n    }\n    let entities = this.line[1]['entities']; // Array\n    this.line[2] = phrase;\n    let originalPhrase = this.line[2]; // original phrase\n    this.line[3] = []; // output content\n    this.line[4] = '';\n    let actualEnd = -1;\n    if (entities && entities.length) { // Exist\n      for (let j = 0; j < entities.length; j++) {\n        let entity = entities[j];\n        /**\n         * 0 => Start\n         * 1 => End\n         * 2 => Entity Name\n         */\n\n        let start = entity[0];\n        if (start !== 0 && actualEnd === -1) {\n          let tokensBetweenEntities = originalPhrase.substring(0, start);\n          phrase = phrase.substring(tokensBetweenEntities.length);\n          this.line[3].push(tokensBetweenEntities);\n        }\n        let end = entity[1];\n        let entityName = entity[2];\n        let token = originalPhrase.substring(start, end);\n        if (actualEnd < start && actualEnd !== -1) {\n          let tokensBetweenEntities = originalPhrase.substring(actualEnd, start);\n          phrase = phrase.substring(tokensBetweenEntities.length);\n          this.line[3].push(tokensBetweenEntities);\n        }\n        phrase = phrase.substring(token.length);\n        actualEnd = end;\n        let tokenWithEntity = `<span [ngStyle]=\"{ \n          'background-color' : '${this.entities[entityName]}', \n          'cursor': 'pointer' \n        }\" (click)=\"showEntities(${this.lineIndex}, ${j})\">${token}</span>`;\n        this.line[3].push(tokenWithEntity);\n      }\n    }\n    this.line[3].push(phrase);\n    let tempString = this.line[3].reduce((acc, elm, idx) => {\n      if (elm === \" \") {\n        return acc += '&nbsp;';\n      }\n      return acc += elm;\n    }, '');\n    this.line[4] = tempString;\n    this.compileTemplate();\n\n  }\n\n}\n\n\nexport abstract class DynamicComponent {\n  line: any;\n  selectPhrase: EventEmitter<any>;\n}","\n// Import the core angular services.\nimport { Directive } from \"@angular/core\";\nimport { ElementRef } from \"@angular/core\";\nimport { EventEmitter } from \"@angular/core\";\nimport { OnDestroy } from \"@angular/core\";\nimport { OnInit } from \"@angular/core\";\nimport { NgZone } from \"@angular/core\";\n\n// ----------------------------------------------------------------------------------- //\n// ----------------------------------------------------------------------------------- //\n\nexport interface TextSelectEvent {\n  text: string;\n  viewportRectangle: SelectionRectangle | null;\n  hostRectangle: SelectionRectangle | null;\n  selectionState?: any | null;\n}\n\ninterface SelectionRectangle {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\n@Directive({\n  selector: \"[textSelect]\",\n  outputs: [\"textSelectEvent: textSelect\"]\n})\nexport class TextSelectDirective implements OnInit, OnDestroy {\n\n  public textSelectEvent: EventEmitter<TextSelectEvent>;\n\n  private elementRef: ElementRef;\n  private hasSelection: boolean;\n  private zone: NgZone;\n\n  // I initialize the text-select directive.\n  constructor(\n    elementRef: ElementRef,\n    zone: NgZone\n  ) {\n\n    this.elementRef = elementRef;\n    this.zone = zone;\n\n    this.hasSelection = false;\n    this.textSelectEvent = new EventEmitter();\n\n  }\n\n  // ---\n  // PUBLIC METHODS.\n  // ---\n\n  // I get called once when the directive is being unmounted.\n  public ngOnDestroy(): void {\n\n    // Unbind all handlers, even ones that may not be bounds at this moment.\n    this.elementRef.nativeElement.removeEventListener(\"mousedown\", this.handleMousedown, false);\n    document.removeEventListener(\"mouseup\", this.handleMouseup, false);\n    document.removeEventListener(\"selectionchange\", this.handleSelectionchange, false);\n\n  }\n\n\n  // I get called once after the inputs have been bound for the first time.\n  public ngOnInit(): void {\n\n    // Since not all interactions will lead to an event that is meaningful to the\n    // calling context, we want to setup the DOM bindings outside of the Angular\n    // Zone. This way, we don't trigger any change-detection digests until we know\n    // that we have a computed event to emit.\n    this.zone.runOutsideAngular(\n      () => {\n\n        // While there are several ways to create a selection on the page, this\n        // directive is only going to be concerned with selections that were\n        // initiated by MOUSE-based selections within the current element.\n        this.elementRef.nativeElement.addEventListener(\"mousedown\", this.handleMousedown, false);\n\n        // While the mouse-even takes care of starting new selections within the\n        // current element, we need to listen for the selectionchange event in\n        // order to pick-up on selections being removed from the current element.\n        document.addEventListener(\"selectionchange\", this.handleSelectionchange, false);\n\n      }\n    );\n\n  }\n\n  // ---\n  // PRIVATE METHODS.\n  // ---\n\n  // I get the deepest Element node in the DOM tree that contains the entire range.\n  private getRangeContainer(range: Range): Node {\n\n    var container = range.commonAncestorContainer;\n\n    // If the selected node is a Text node, climb up to an element node - in Internet\n    // Explorer, the .contains() method only works with Element nodes.\n    while (container.nodeType !== Node.ELEMENT_NODE) {\n\n      container = container.parentNode;\n\n    }\n\n    return (container);\n\n  }\n\n\n  // I handle mousedown events inside the current element.\n  private handleMousedown = (): void => {\n\n    document.addEventListener(\"mouseup\", this.handleMouseup, false);\n\n  }\n\n\n  // I handle mouseup events anywhere in the document.\n  private handleMouseup = (): void => {\n\n    document.removeEventListener(\"mouseup\", this.handleMouseup, false);\n\n    this.processSelection();\n\n  }\n\n\n  // I handle selectionchange events anywhere in the document.\n  private handleSelectionchange = (): void => {\n\n    // We are using the mousedown / mouseup events to manage selections that are\n    // initiated from within the host element. But, we also have to account for\n    // cases in which a selection outside the host will cause a local, existing\n    // selection (if any) to be removed. As such, we'll only respond to the generic\n    // \"selectionchange\" event when there is a current selection that is in danger\n    // of being removed.\n    if (this.hasSelection) {\n\n      this.processSelection();\n\n    }\n\n  }\n\n\n  // I determine if the given range is fully contained within the host element.\n  private isRangeFullyContained(range: Range): boolean {\n\n    var hostElement = this.elementRef.nativeElement;\n    var selectionContainer = range.commonAncestorContainer;\n\n    // If the selected node is a Text node, climb up to an element node - in Internet\n    // Explorer, the .contains() method only works with Element nodes.\n    while (selectionContainer.nodeType !== Node.ELEMENT_NODE) {\n\n      selectionContainer = selectionContainer.parentNode;\n\n    }\n\n    return (hostElement.contains(selectionContainer));\n\n  }\n\n\n  // I inspect the document's current selection and check to see if it should be\n  // emitted as a TextSelectEvent within the current element.\n  private processSelection(): void {\n\n    var selection = document.getSelection();\n\n    // If there is a new selection and an existing selection, let's clear out the\n    // existing selection first.\n    if (this.hasSelection) {\n\n      // Since emitting event may cause the calling context to change state, we\n      // want to run the .emit() inside of the Angular Zone. This way, it can\n      // trigger change detection and update the views.\n      this.zone.runGuarded(\n        () => {\n\n          this.hasSelection = false;\n          this.textSelectEvent.emit({\n            text: \"\",\n            viewportRectangle: null,\n            hostRectangle: null,\n            selectionState: null\n          });\n\n        }\n      );\n\n    }\n\n    // If the new selection is empty (for example, the user just clicked somewhere\n    // in the document), then there's no new selection event to emit.\n    if (!selection.rangeCount || !selection.toString()) {\n\n      return;\n\n    }\n\n    var range = selection.getRangeAt(0);\n    var rangeContainer = this.getRangeContainer(range);\n\n    // We only want to emit events for selections that are fully contained within the\n    // host element. If the selection bleeds out-of or in-to the host, then we'll\n    // just ignore it since we don't control the outer portions.\n    if (this.elementRef.nativeElement.contains(rangeContainer)) {\n\n      var preSelectionRange = range.cloneRange();\n      var start = null;\n\n      preSelectionRange.selectNodeContents(rangeContainer);\n      preSelectionRange.setEnd(range.startContainer, range.startOffset);\n      start = preSelectionRange.toString().length;\n      var selectionState = {\n        start: start,\n        end: start + range.toString().length\n      };\n\n\n      var viewportRectangle = range.getBoundingClientRect();\n      var localRectangle = this.viewportToHost(viewportRectangle, rangeContainer);\n\n      // Since emitting event may cause the calling context to change state, we\n      // want to run the .emit() inside of the Angular Zone. This way, it can\n      // trigger change detection and update the views.\n      this.zone.runGuarded(\n        () => {\n\n          this.hasSelection = true;\n          this.textSelectEvent.emit({\n            text: selection.toString(),\n            viewportRectangle: {\n              left: viewportRectangle.left,\n              top: viewportRectangle.top,\n              width: viewportRectangle.width,\n              height: viewportRectangle.height\n            },\n            hostRectangle: {\n              left: localRectangle.left,\n              top: localRectangle.top,\n              width: localRectangle.width,\n              height: localRectangle.height\n            },\n            selectionState: selectionState\n          });\n\n        }\n      );\n\n    }\n\n  }\n\n\n  // I convert the given viewport-relative rectangle to a host-relative rectangle.\n  // --\n  // NOTE: This algorithm doesn't care if the host element has a position - it simply\n  // walks up the DOM tree looking for offsets.\n  private viewportToHost(\n    viewportRectangle: SelectionRectangle,\n    rangeContainer: Node\n  ): SelectionRectangle {\n\n    var host = this.elementRef.nativeElement;\n    var hostRectangle = host.getBoundingClientRect();\n\n    // Both the selection rectangle and the host rectangle are calculated relative to\n    // the browser viewport. As such, the local position of the selection within the\n    // host element should just be the delta of the two rectangles.\n    var localLeft = (viewportRectangle.left - hostRectangle.left);\n    var localTop = (viewportRectangle.top - hostRectangle.top);\n\n    var node = rangeContainer;\n    // Now that we have the local position, we have to account for any scrolling\n    // being performed within the host element. Let's walk from the range container\n    // up to the host element and add any relevant scroll offsets to the calculated\n    // local position.\n    do {\n\n      localLeft += (<Element>node).scrollLeft;\n      localTop += (<Element>node).scrollTop;\n\n    } while ((node !== host) && (node = node.parentNode));\n\n    return ({\n      left: localLeft,\n      top: localTop,\n      width: viewportRectangle.width,\n      height: viewportRectangle.height\n    });\n\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'objectLoop'\n})\nexport class LoopOverObjectsPipe implements PipeTransform {\n\n  transform(object: any): any {\n    return Object.keys(object);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileOpService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from \"rxjs\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n  event$ = new Subject();\n  lineIndex: number = -1;\n\n  entites = {\n    'CORE': '#AE8CA3',\n    'ACTION': '#9EE493',\n    'SIDE_CORE': '#40798C',\n    'AREAS': '#D17A22',\n    'BUDGET': '#3498db',\n    'CANCEL': '#c0392b',\n    'EXCLUDE': '#76BED0',\n    'EXTRAS': '#FFA69E',\n    'FOOD_CATEGORY': '#6DAEDB',\n    'FOOD_CUSINES': '#EFD0CA',\n    'INCLUDE': '#FE938C',\n    'POPULAR': '#192BC2',\n    'RECAP': '#ED474A',\n    'REQUEST': '#E0C879',\n    'REQUEST_ADD': '#2ecc71',\n    'REQUEST_REMOVE': '#e74c3c',\n    'RESTAURANT': '#AEADF0',\n    'SIZE': '#F0BCD4',\n    'AFTER_CORE': '#6c5ce7'\n  };\n  constructor() { }\n\n  sendIndex(index) {\n    if (+index !== +this.lineIndex) {\n      this.lineIndex = index;\n      this.event$.next(index);\n    }\n  }\n\n  getIndex() {\n    return this.event$.asObservable();\n  }\n\n\n  public tuple2Arrays(tuples) {\n    tuples = tuples.replace(/\\(/g, '[').replace(/\\)/g, ']');\n    return Function(`return (${tuples});`)();\n  }\n\n  public arrays2Tuples(array) {\n    let container = '[';\n    let outerComma = ',';\n    for (let i = 0; i < array.length; i++) {\n      let tuple = array[i];\n      let innerTuple = `(${this.qoutedString(tuple[0])},`; // Phrase\n\n      let Entites = '';\n      tuple[1]['entities'].forEach((el, index) => {\n        let innerComma = ',';\n        let tempString = el.reduce((acc, elm, idx) => {\n          return idx == 0 ? this.qoutedString(elm) : acc + ', ' + this.qoutedString(elm);\n        }, '');\n        if (index === (tuple[1]['entities'].length - 1)) { // For concat inner tuples inside entities\n          innerComma = '';\n        }\n        Entites += `(${tempString})${innerComma}`;\n      });\n\n      Entites = `{ 'entities': [${Entites}] }`;\n      innerTuple += `${Entites})`;\n\n      if (i === array.length - 1) {\n        outerComma = '';\n      }\n      container += `${innerTuple}${outerComma}`\n    }\n\n    container += ']';\n    return container;\n  }\n\n  public getEntities() {\n    return this.entites;\n  }\n\n  qoutedString(term) {\n    if (typeof term === 'string') {\n      term = term.replace(/'/g, \"\\\\'\");\n      return `'${term}'`;\n    }\n    return term;\n  }\n\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}